#!/bin/bash

### a command line radio player with mpv
#
# Usage: radio [option] or radio [a radio url]
#
#        radio      --> random a radio and
#                       press 'q' to play a next random url.
#                       this loops infinitely, press ctrl-c to exit.
#
#        radio g {jp|kr|usa|uk}
#                   --> random a National group and
#                       press 'q' to play a next random url.
#                       this loops infinitely, press ctrl-c to exit.
#
#        radio ,    --> rotate a radio in a specific time.
#                       this loops infinitely, press ctrl-c to exit.
#
#        radio .    --> display all radios and
#                       choose a wanted radio number.
#
#        radio TEST --> test radios whether work or not.
#                       If failed, it logs the file named report.
#
#        radio fuji --> play a fujiyama radio.

### TODO
#
# add more radio's urls

input="$1"
PLAYER="mpv"
PS3="Choose : "
STARTLINE="### MY FAVORITE RADIO URLS"
SCRIPTDIR=$(dirname -- "$(readlink -f -- "$0")")
REPORTPATH="$SCRIPTDIR/report"
REPORTFIRSTLINE="### FAIL RADIO URL's REPORT"
TESTTIME=5
ROTATIONTIME=600
FILTER="^#\?$\|^##\+\|^#[^ ]"

while read -r line ; do
    (( x++ ))
    if [[ "$line" == "$STARTLINE" ]]; then
        break
    fi
done < "$0"

# printf "\n\n startline's number is $x \n\n"
radiolist=$(tail -n +"$(( x + 4 ))" "$0")
linesnumber=$(wc -l <<< "$radiolist")
radioname=$(awk -F http '{print $1}' <<< "$radiolist")
radiourl=$(awk -F http '{print FS$2}' <<< "$radiolist")
grepstring="^# .*\b$input"
grepcount=$(grep -ic "$grepstring" <<< "$radioname")
# printf "\n\n grepcount is $grepcount \n\n"



if [[ -z $input ]] ; then
    while true ; do
        randomnumber=$(shuf -i 1-$linesnumber -n 1)
        randomradio=$(head -"$randomnumber" <<< "$radiolist" | \
                          tail -1)
        # filter for comments
        # basic regex: ‘\?’, ‘\+’, ‘\{’, ‘\|’, ‘\(’, and ‘\)’
        if (( $(grep -c "$FILTER" <<< "$randomradio") )) ; then
            # printf "\n\n"
            # awk '{ $1="" ; print $0 }' <<< "$randomradio"
            # printf "\n\n"
            # awk '{ print $1 }' <<< "$randomradio" | \
            #   sed 's/^#*/ /'
            # printf "\n\n"
            continue
        fi
        printf "\n\n"
        awk -F http '{print $1}' <<< "$randomradio" | \
            sed 's/# / /'
        printf "\n\n"
        $PLAYER $(awk -F http '{print FS$2}' <<< "$randomradio") &
        lastbgpid=$!
        wait $lastbgpid
        sleep 1
    done
    exit 0
fi

if [[ "$1" == "g" ]] ; then
    x=0
    while read -r line ; do
        (( x++ ))
        # if [[ "$2" == "jp" ]] ; then
        #    if [[ "$line" == "## Japan" ]] ; then
        #        break
        #    fi
        # elif [[ "$2" == "kr" ]] ; then
        #     if [[ "$line" == "## Korea" ]] ; then
        #         break
        #     fi
        # elif [[ "$2" == "usa" ]] ; then
        #     if [[ "$line" == "## USA" ]] ; then
        #         break
        #     fi
        # elif [[ "$2" == "uk" ]] ; then
        #     if [[ "$line" == "## UK" ]] ; then
        #         break
        #     fi
        # else
        #     printf "\n\n Usage: radio g {jp|kr|usa|uk} \n\n"
        #     exit 1
        # fi

        # case:
        case "$2" in
            jp)
                if [[ "$line" == "## Japan" ]] ; then
                    break
                fi
                ;;
            kr)
                if [[ "$line" == "## Korea" ]] ; then
                    break
                fi
                ;;
            usa)
                if [[ "$line" == "## USA" ]] ; then
                    break
                fi
                ;;
            uk)
                if [[ "$line" == "## UK" ]] ; then
                    break
                fi
                ;;
            *)
                printf "\n\n Usage: radio g {jp|kr|usa|uk} \n\n"
                exit 1
        esac
    done <<< "$radiolist"
    regionradiolist=$(tail -n +"$(( x + 2 ))" <<< "$radiolist")
    y=0
    while read -r line ; do
        (( y++ ))
        if [[ "$line" =~ (^## .*) ]]; then
            break
        fi
    done <<< "$regionradiolist"
    regionradiolist=$(head -n "$(( y - 2 ))" <<< "$regionradiolist")
    regionlinesnumber=$(wc -l <<< "$regionradiolist")
    while true ; do
        randomnumber=$(shuf -i 1-$regionlinesnumber -n 1)
        randomradio=$(head -"$randomnumber" <<< "$regionradiolist" | \
                          tail -1)
        # filter for comments
        # basic regex: ‘\?’, ‘\+’, ‘\{’, ‘\|’, ‘\(’, and ‘\)’
        if (( $(grep -c "$FILTER" <<< "$randomradio") )) ; then
            # printf "\n\n"
            # awk '{ $1="" ; print $0 }' <<< "$randomradio"
            # printf "\n\n"
            # awk '{ print $1 }' <<< "$randomradio" | \
            #   sed 's/^#*/ /'
            # printf "\n\n"
            continue
        fi
        printf "\n\n"
        awk -F http '{print $1}' <<< "$randomradio" | \
            sed 's/# / /'
        printf "\n\n"
        $PLAYER $(awk -F http '{print FS$2}' <<< "$randomradio") &
        lastbgpid=$!
        wait $lastbgpid
        sleep 1
    done
    exit 0
fi

if [[ $input == "," ]] ; then
    while true ; do
        randomnumber=$(shuf -i 1-$linesnumber -n 1)
        randomradio=$(head -"$randomnumber" <<< "$radiolist" | \
                          tail -1)
        # filter for comments
        if (( $(grep -c "$FILTER" <<< "$randomradio") )) ; then
            continue
        fi
        printf "\n\n"
        awk -F http '{print $1}' <<< "$randomradio" | \
            sed 's/# / /'
        printf "\n\n"
        $PLAYER $(awk -F http '{print FS$2}' <<< "$randomradio") &
        lastbgpid=$!
        sleep $TESTTIME
        # fail playing
        if (( ! $(ps -A | grep -c $lastbgpid) )) ; then
            continue
        fi
        sleep $ROTATIONTIME
        kill -9 $lastbgpid
        sleep 1
    done
    exit 0
fi

if [[ $input == "TEST" ]] ; then
    cat > "$REPORTPATH" <<< $REPORTFIRSTLINE
    while read -r line ; do
        printf "\n\n"
        awk -F http '{print $1}' <<< $line | \
            sed 's/# / /'
        printf "\n\n"
        $PLAYER $(awk -F http '{print FS$2}' <<< $line)
        lastbgpid=$!
        sleep $TESTTIME
        if (( ! $(ps -A | grep -c $lastbgpid) )) ; then
            echo "Fail: $line" >> "$REPORTPATH"
        else
            kill -9 $lastbgpid
        fi
        sleep 1
    done <<< "$radiolist"
    printf "\n\n"
    cat "$REPORTPATH"
    printf "\n\n"
    exit 0
fi

if (( $grepcount == 1 )) ; then
    printf "\n\n"
    grep -i "$grepstring" <<< "$radioname" | sed 's/# / /'
    printf "\n\n"
    theradioname=$(grep -i "$grepstring" <<< "$radioname" | \
                       sed 's/# / /')
    $PLAYER $(grep -i "$theradioname" <<< "$radiolist" | \
                  awk -F http '{print FS$2}')
elif (( $grepcount > 1 )) ; then
    radionames=$(grep -i "$grepstring" <<< "$radioname" | \
                     sed 's/# //')
    readarray -t arr_radionames <<< "$radionames"
    select radio in "${arr_radionames[@]}" ; do
        selectedradio="$radio"
        break
    done
    printf "\n\n $selectedradio \n\n"
    $PLAYER $(grep -i "$selectedradio" <<< "$radiolist" | \
                  awk -F http '{print FS$2}')
else
    printf "\n\n Sorry, the \"$1\" does not match. \n\n"
fi



### MY FAVORITE RADIO URLS
#
# write a symptom without any space after # for error log
#
## UK
#
# BBC Radio London 94.9 FM http://bbcmedia.ic.llnwd.net/stream/bbcmedia_lrldn_mf_p
#
## USA
#
# NPR 24h Program Stream https://npr-ice.streamguys1.com/live.mp3
# CNN HLN http://tunein.streamguys1.com/cnnhln
# Fox News Radio https://streaming-ent.shoutcast.com/foxnews
# KWSU 1250 Northwest Public Radio NPR News - Pullman, WA http://streams.nwpr.org:8000/NWPRNEWS
# WNPR 90.5 Connecticut Public Radio - Meriden, CT http://16113.live.streamtheworld.com/WNPRFM_SC
# 90.5 WESA Pittsburgh's NPR New Station https://17273.live.streamtheworld.com:443/WESAFM.mp3
#
## Korea
#
# SBS 러브 FM-SBS 라디오 http://slive.ytn.co.kr:1935/live/fmlive_0624_1.sdp/playlist.m3u8
# gukak http://mgugaklive.nowcdn.co.kr/gugakradio/gugakradio.stream/playlist.m3u8
# FM 95.1 TBS fm http://58.234.158.60:1935/fmlive/myStream/playlist.m3u8
# KBS World Japanese Radio http://101.79.244.199:1935/cocotv/_definst_/CH00007/playlist.m3u8
#
## Japan
#
#loading-error Eden of the West http://edenofthewest.com:8080/weeaboo.mp3
# Kishiwada Radio http://61.89.201.27:8000/radikishi.mp3
# Kyoto Living FM (京都リビング FM/きょうと りびんぐ FM) http://musicbird.leanstream.co/JCB104-MP3
# FmHaro!76.1（エフエムハロー!） http://musicbird.leanstream.co/JCB034-MP3
# FM Fujiyama (FMふじやま, JOZZ3CA-FM, 77.6 MHz, Fujikawaguchiko, Yamanashi) http://musicbird.leanstream.co/JCB026-MP3
# Shuunan FM (しゅうなんFM, JOZZ8AJ-FM, 78.4 MHz, Shūnan, Yamaguchi) http://musicbird.leanstream.co/JCB085-MP3
# Air Tesshi (Airてっし, JOZZ1AU-FM, 78.8 MHz, Nayoro, Hokkaido) http://musicbird.leanstream.co/JCB003-MP3
# Umeda FM Be Happy! (ウメダFM Be Happy! 789/エフエムキタ, JOZZ7AK-FM, 78.9MHz, Kita-ku, Osaka) http://musicbird.leanstream.co/JCB068-MP3
# Happy FM Itami (ハッピーエフエムいたみ, JOZZ7AJ-FM, 79.4 MHz, Itami, Hyōgo) http://musicbird.leanstream.co/JCB070-MP3
# FM Yame (FM八女, JOZZ0BY-FM, 80.1 MHz, Yame, Fukuoka) http://musicbird.leanstream.co/JCB086-MP3
# FM Hanako (JOZZ7AA-FM, 82.4 MHz, Moriguchi City, Osaka) http://musicbird.leanstream.co/JCB069-MP3
# Kamakura FM 82.8 (かまくらFM, JOZZ3AF-FM, 82.8 MHz, Kamakura, Kanagawa) http://musicbird.leanstream.co/JCB016-MP3?args=tunein_02
#Ichikawa Urara FM (市川うららFM. JOZZ3AY-FM, 83.0 MHz, Ichikawa, Chiba) http://musicbird.leanstream.co/JCB020-MP3
# Humming FM Takarazuka (ハミングFM宝塚, JOZZ7AT-FM, 83.5 MHz, Takarazuka, Hyōgo) http://musicbird.leanstream.co/JCB071-MP3
# 84.3 FM Edogawa (FMえどがわ, JOZZ3AS-FM, Edogawa City, Tokyo) http://musicbird.leanstream.co/JCB032-MP3
# Shonan Magic Wave (湘南マジックウェィブ, JOZZ3CI-FM, 85.6 MHz, Ōiso, Kanagawa) http://musicbird.leanstream.co/JCB018-MP3
# FM Hana (FMはな, JOZZ1AZ-FM, 87.0 MHz, Nakashibetsu, Hokkaido) http://musicbird.leanstream.co/JCB001-MP3
# Banana FM (バナナエフエム, JOZZ7BE-FM, 87.7 MHz, Wakayama City) http://musicbird.leanstream.co/JCB075-MP3
#
## End
